openapi: 3.0.3
info:
  title: EATSNDRINKS API
  version: 1.0.0
  description: Graduation Thesis with Django Rest Framework API
paths:
  /catalogue/categories/:
    get:
      operationId: catalogue_categories_list
      description: Lấy danh sách tất cả các danh mục có sẵn.
      summary: Danh sách tất cả các danh mục
      tags:
      - catalogue
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: catalogue_categories_create
      description: Tạo một danh mục mới với dữ liệu đã cung cấp.
      summary: Tạo một danh mục mới
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /catalogue/categories/{id}/:
    get:
      operationId: catalogue_categories_retrieve
      description: Nhận thông tin chi tiết về một danh mục cụ thể.
      summary: Lấy thông tin một danh mục
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalogue
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: catalogue_categories_update
      description: Cập nhật một danh mục hiện có với dữ liệu đã cung cấp.
      summary: Cập nhật một danh mục
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: catalogue_categories_partial_update
      description: Cập nhật một phần của danh mục hiện có với dữ liệu đã cung cấp.
      summary: Cập nhật một phần của danh mục
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /catalogue/products/:
    get:
      operationId: catalogue_products_list
      description: Lấy danh sách tất cả các sản phẩm có sẵn.
      summary: Danh sách tất cả các sản phẩm
      tags:
      - catalogue
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: catalogue_products_create
      description: Tạo một sản phẩm mới với dữ liệu đã cung cấp.
      summary: Tạo một sản phẩm mới
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /catalogue/products/{id}/:
    get:
      operationId: catalogue_products_retrieve
      description: Nhận thông tin chi tiết về một sản phẩm cụ thể.
      summary: Lấy thông tin một sản phẩm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalogue
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: catalogue_products_update
      description: Cập nhật một sản phẩm hiện có với dữ liệu đã cung cấp.
      summary: Cập nhật một sản phẩm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: catalogue_products_partial_update
      description: Cập nhật một phần của sản phẩm hiện có với dữ liệu đã cung cấp.
      summary: Cập nhật một phần của sản phẩm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /users/api/token/refresh/:
    post:
      operationId: users_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                  refresh:
                    type: string
                  access:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                  errors:
                    type: object
          description: ''
        '409':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
      required:
      - name
      - pk
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    PatchedCategory:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
    PatchedProduct:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 255
        description:
          type: string
        mainimage:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        category:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Product:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 255
        description:
          type: string
        mainimage:
          type: string
          format: uri
          nullable: true
        is_active:
          type: boolean
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        category:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - name
      - pk
      - price
      - updated_at
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
      required:
      - first_name
      - id
      - last_name
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
